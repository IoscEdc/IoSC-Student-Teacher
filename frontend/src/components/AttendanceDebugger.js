import React, { useEffect } from 'react';\nimport { Box, Typography, Paper, Accordion, AccordionSummary, AccordionDetails } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport useStudentAttendance from '../hooks/useStudentAttendance';\nimport { useSelector } from 'react-redux';\n\n/**\n * Debug component to help identify issues with student attendance data\n */\nconst AttendanceDebugger = () => {\n    const { currentUser } = useSelector((state) => state.user);\n    \n    const { \n        attendanceData, \n        rawData,\n        attendanceRecords,\n        loading, \n        error,\n        lastUpdated\n    } = useStudentAttendance(currentUser?._id);\n\n    useEffect(() => {\n        console.log('üêõ AttendanceDebugger - Hook Data:', {\n            attendanceData,\n            rawData,\n            attendanceRecords,\n            loading,\n            error,\n            lastUpdated,\n            currentUserId: currentUser?._id\n        });\n    }, [attendanceData, rawData, attendanceRecords, loading, error, lastUpdated, currentUser]);\n\n    const formatJson = (obj) => {\n        try {\n            return JSON.stringify(obj, null, 2);\n        } catch (e) {\n            return 'Error formatting JSON: ' + e.message;\n        }\n    };\n\n    return (\n        <Box sx={{ p: 2 }}>\n            <Typography variant=\"h5\" gutterBottom color=\"primary\">\n                üêõ Attendance Data Debugger\n            </Typography>\n            \n            <Paper sx={{ p: 2, mb: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                    Hook Status\n                </Typography>\n                <Typography>Loading: {loading ? '‚úÖ Yes' : '‚ùå No'}</Typography>\n                <Typography>Error: {error ? `‚ùå ${error}` : '‚úÖ None'}</Typography>\n                <Typography>Last Updated: {lastUpdated ? lastUpdated.toLocaleString() : '‚ùå Never'}</Typography>\n                <Typography>Current User ID: {currentUser?._id || '‚ùå Not found'}</Typography>\n            </Paper>\n\n            <Accordion>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography variant=\"h6\">\n                        Raw API Data ({Array.isArray(rawData) ? rawData.length : 'Not array'} items)\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Box component=\"pre\" sx={{ \n                        backgroundColor: '#f5f5f5', \n                        p: 2, \n                        borderRadius: 1, \n                        overflow: 'auto',\n                        fontSize: '0.8rem'\n                    }}>\n                        {formatJson(rawData)}\n                    </Box>\n                </AccordionDetails>\n            </Accordion>\n\n            <Accordion>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography variant=\"h6\">\n                        Transformed Data ({attendanceData?.subjects?.length || 0} subjects)\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Box component=\"pre\" sx={{ \n                        backgroundColor: '#f5f5f5', \n                        p: 2, \n                        borderRadius: 1, \n                        overflow: 'auto',\n                        fontSize: '0.8rem'\n                    }}>\n                        {formatJson(attendanceData)}\n                    </Box>\n                </AccordionDetails>\n            </Accordion>\n\n            <Accordion>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography variant=\"h6\">\n                        Attendance Records ({Object.keys(attendanceRecords || {}).length} subjects)\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Box component=\"pre\" sx={{ \n                        backgroundColor: '#f5f5f5', \n                        p: 2, \n                        borderRadius: 1, \n                        overflow: 'auto',\n                        fontSize: '0.8rem'\n                    }}>\n                        {formatJson(attendanceRecords)}\n                    </Box>\n                </AccordionDetails>\n            </Accordion>\n\n            {attendanceData?.subjects && (\n                <Paper sx={{ p: 2, mt: 2 }}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Quick Summary\n                    </Typography>\n                    <Typography>Overall Percentage: {attendanceData.overallPercentage?.toFixed(2) || 0}%</Typography>\n                    <Typography>Total Subjects: {attendanceData.subjects.length}</Typography>\n                    <Typography>Total Sessions: {attendanceData.totalSessions || 0}</Typography>\n                    <Typography>Total Present: {attendanceData.totalPresent || 0}</Typography>\n                    \n                    {attendanceData.subjects.map((subject, index) => (\n                        <Box key={index} sx={{ mt: 1, p: 1, backgroundColor: '#f9f9f9', borderRadius: 1 }}>\n                            <Typography variant=\"subtitle2\">\n                                {subject.subject} - {subject.percentage?.toFixed(1) || 0}% \n                                ({subject.present || 0}/{subject.total || 0})\n                            </Typography>\n                            <Typography variant=\"caption\">\n                                Records: {subject.records?.length || 0}\n                            </Typography>\n                        </Box>\n                    ))}\n                </Paper>\n            )}\n        </Box>\n    );\n};\n\nexport default AttendanceDebugger;"